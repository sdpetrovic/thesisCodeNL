% This script lets me plot the 3-D graphs of the generated trajectories
% and plot the sensitivity analysis plots.
% For this the Cartesian generated data is used (also in the spherical
% computation case) and the latests files for the different variables.
%
% Stacha Petrovic 15-12-2016
% 
% version 1
% 
% Linux Ubuntu 16.04 LTS
%
%
% 
%
%

close all
clear all
clc

format long

tic


%% Get the data

% pathToValidationFolder = '/home/stachap/Documents/Thesis/03. Tudat/tudatBundle/tudatApplications/thesisProject/04.VerificationAndValidation/04.DifferentVariables';
% 
% currentVariableFolder = 'Order';
% currentVariableUnit = '[-]';
% currentCaseFolder = 'Case1/issue';


% Automatic latest file name (Source:
% https://www.youtube.com/watch?v=D8UkAOhsyDI)

% Write the paths to the folders
% pathTSI = fullfile(pathToValidationFolder,'TSI',currentVariableFolder,currentCaseFolder);
pathTSI = fullfile(pwd,'/IndividualTrajectories');
% pathRKF = fullfile(pathToValidationFolder,'RKF',currentVariableFolder,currentCaseFolder);

% Find all files ending with .csv in that folder
dTSI = dir(fullfile(pathTSI,'*.csv'));
% dRKF = dir(fullfile(pathRKF,'*.csv'));

% Find the latest file
datesTSI = [dTSI.datenum]; % Get all the dates
[~,newestIndexTSI] = max(datesTSI); % Get the index of the newest date
newestFileTSIOrder20 = dTSI(newestIndexTSI); % Get the data corresponding to the newest file
newestFileNameTSIOrder20 = newestFileTSIOrder20.name; % Get the name of the newest file

newestFileTSIOrder30 = dTSI(newestIndexTSI-1); % Get the data corresponding to the newest file
newestFileNameTSIOrder30 = newestFileTSIOrder30.name; % Get the name of the newest file

newestFileTSIOrder29 = dTSI(newestIndexTSI-2); % Get the data corresponding to the newest file
newestFileNameTSIOrder29 = newestFileTSIOrder29.name; % Get the name of the newest file

% 
% datesRKF = [dRKF.datenum]; % Get all the dates
% [~,newestIndexRKF] = max(datesRKF); % Get the index of the newest date
% newestFileRKF = dRKF(newestIndexRKF); % Get the data corresponding to the newest file
% newestFileNameRKF = newestFileRKF.name; % Get the name of the newest file


% dTSI.date




% Specify the paths
VariablePathTSIOrder20 = fullfile(pathTSI,newestFileNameTSIOrder20); % Create the path for the TSI data
VariablePathTSIOrder30 = fullfile(pathTSI,newestFileNameTSIOrder30); % Create the path for the TSI data
VariablePathTSIOrder29 = fullfile(pathTSI,newestFileNameTSIOrder29); % Create the path for the TSI data

% VariablePathRKF = fullfile(pathRKF,newestFileNameRKF); % Create the path for the RKF data


VariableVectorTSIOrder20 = csvread(VariablePathTSIOrder20); % Read the file
VariableVectorTSIOrder30 = csvread(VariablePathTSIOrder30); % Read the file
VariableVectorTSIOrder29 = csvread(VariablePathTSIOrder29); % Read the file

% VariableVectorRKF = csvread(VariablePathRKF); % Read the file







%% Generate the required vectors

% Desired data
timeTSIOrder20 = VariableVectorTSIOrder20(:,1); % Time


% States
xPositionTSIOrder20 = VariableVectorTSIOrder20(:,2); % x-position TSI [km]
yPositionTSIOrder20 = VariableVectorTSIOrder20(:,3); % y-position TSI [km]
zPositionTSIOrder20 = VariableVectorTSIOrder20(:,4); % z-position TSI [km]
xVelocityTSIOrder20 = VariableVectorTSIOrder20(:,5); % x-velocity TSI [km/s]
yVelocityTSIOrder20 = VariableVectorTSIOrder20(:,6); % y-velocity TSI [km/s]
zVelocityTSIOrder20 = VariableVectorTSIOrder20(:,7); % z-velocity TSI [km/s]
MassTSIOrder20 = VariableVectorTSIOrder20(:,8); % Mass TSI [kg]

% Desired data
timeTSIOrder30 = VariableVectorTSIOrder30(:,1); % Time


% States
xPositionTSIOrder30 = VariableVectorTSIOrder30(:,2); % x-position TSI [km]
yPositionTSIOrder30 = VariableVectorTSIOrder30(:,3); % y-position TSI [km]
zPositionTSIOrder30 = VariableVectorTSIOrder30(:,4); % z-position TSI [km]
xVelocityTSIOrder30 = VariableVectorTSIOrder30(:,5); % x-velocity TSI [km/s]
yVelocityTSIOrder30 = VariableVectorTSIOrder30(:,6); % y-velocity TSI [km/s]
zVelocityTSIOrder30 = VariableVectorTSIOrder30(:,7); % z-velocity TSI [km/s]
MassTSIOrder30 = VariableVectorTSIOrder30(:,8); % Mass TSI [kg]

% Desired data
timeTSIOrder29 = VariableVectorTSIOrder29(:,1); % Time


% States
xPositionTSIOrder29 = VariableVectorTSIOrder29(:,2); % x-position TSI [km]
yPositionTSIOrder29 = VariableVectorTSIOrder29(:,3); % y-position TSI [km]
zPositionTSIOrder29 = VariableVectorTSIOrder29(:,4); % z-position TSI [km]
xVelocityTSIOrder29 = VariableVectorTSIOrder29(:,5); % x-velocity TSI [km/s]
yVelocityTSIOrder29 = VariableVectorTSIOrder29(:,6); % y-velocity TSI [km/s]
zVelocityTSIOrder29 = VariableVectorTSIOrder29(:,7); % z-velocity TSI [km/s]
MassTSIOrder29 = VariableVectorTSIOrder29(:,8); % Mass TSI [kg]


% 
% 
% % Difference in metres w.r.t. the order 20 end state
% 
% xPositionTSIdifference = abs(TruthTSI(1)-xPositionTSI)*1000; % x-position TSI [m]
% yPositionTSIdifference = abs(TruthTSI(2)-yPositionTSI)*1000; % y-position TSI [m]
% zPositionTSIdifference = abs(TruthTSI(3)-zPositionTSI)*1000; % z-position TSI [m]
% xVelocityTSIdifference = abs(TruthTSI(4)-xVelocityTSI)*1000; % x-velocity TSI [m/s]
% yVelocityTSIdifference = abs(TruthTSI(5)-yVelocityTSI)*1000; % y-velocity TSI [m/s]
% zVelocityTSIdifference = abs(TruthTSI(6)-zVelocityTSI)*1000; % z-velocity TSI [m/s]
% MassTSIdifference = abs(TruthTSI(7)-MassTSI); % Mass TSI [kg]
% 
% xPositionTSIdifferenceRKF = abs(VariableVectorTSI(:,21))*1000; % x-position TSI [m]
% yPositionTSIdifferenceRKF = abs(VariableVectorTSI(:,22))*1000; % y-position TSI [m]
% zPositionTSIdifferenceRKF = abs(VariableVectorTSI(:,23))*1000; % z-position TSI [m]
% xVelocityTSIdifferenceRKF = abs(VariableVectorTSI(:,24))*1000; % x-velocity TSI [m/s]
% yVelocityTSIdifferenceRKF = abs(VariableVectorTSI(:,25))*1000; % y-velocity TSI [m/s]
% zVelocityTSIdifferenceRKF = abs(VariableVectorTSI(:,26))*1000; % z-velocity TSI [m/s]
% MassTSIdifferenceRKF = abs(VariableVectorTSI(:,27)); % Mass TSI [kg]
% 



%% Plots

% x position
figure(1)
plot(timeTSIOrder20,xPositionTSIOrder20)
hold on
plot(timeTSIOrder29,xPositionTSIOrder29)
hold on
plot(timeTSIOrder30,xPositionTSIOrder30)

title(['Time vs ','x position all']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('x position [km]');

legend('Order 20','Order 29','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(2)
plot(timeTSIOrder20,xPositionTSIOrder20)
hold on
plot(timeTSIOrder30,xPositionTSIOrder30)

title(['Time vs ','x position correct order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('x position [km]');

legend('Order 20','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(3)
plot(timeTSIOrder20,xPositionTSIOrder20)
hold on
plot(timeTSIOrder29,xPositionTSIOrder29)


title(['Time vs ','x position all faulty order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('x position [km]');

legend('Order 20','Order 29','Location','NorthEastOutside'); % Add a legend in the top right corner

% y position
figure(4)
plot(timeTSIOrder20,yPositionTSIOrder20)
hold on
plot(timeTSIOrder29,yPositionTSIOrder29)
hold on
plot(timeTSIOrder30,yPositionTSIOrder30)

title(['Time vs ','y position all']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 29','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(5)
plot(timeTSIOrder20,yPositionTSIOrder20)
hold on
plot(timeTSIOrder30,yPositionTSIOrder30)

title(['Time vs ','y position correct order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(6)
plot(timeTSIOrder20,yPositionTSIOrder20)
hold on
plot(timeTSIOrder29,yPositionTSIOrder29)


title(['Time vs ','y position all faulty order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 29','Location','NorthEastOutside'); % Add a legend in the top right corner



% z position
figure(7)
plot(timeTSIOrder20,zPositionTSIOrder20)
hold on
plot(timeTSIOrder29,zPositionTSIOrder29)
hold on
plot(timeTSIOrder30,zPositionTSIOrder30)

title(['Time vs ','y position all']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 29','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(8)
plot(timeTSIOrder20,zPositionTSIOrder20)
hold on
plot(timeTSIOrder30,zPositionTSIOrder30)

title(['Time vs ','y position correct order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 30','Location','NorthEastOutside'); % Add a legend in the top right corner

figure(9)
plot(timeTSIOrder20,zPositionTSIOrder20)
hold on
plot(timeTSIOrder29,zPositionTSIOrder29)


title(['Time vs ','y position all faulty order']); % Give the figure a title
xlabel('Time [s]'); % Label the different axes
ylabel('y position [km]');

legend('Order 20','Order 29','Location','NorthEastOutside'); % Add a legend in the top right corner





toc




